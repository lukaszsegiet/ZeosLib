=============================================================

ZeosDBO
  C++Builder Packages Installation Manual


  By
    Marcelo Augusto Cicogna
    HydroByte Software

=============================================================

Goals
  - New C++Builder packages.
  - Reorganize C++ compiled files derived from ZeosDBO 
    Object Pascal source.
  - Allow more than one build to be installed on Windows.
  - For C++Builder XE2 or up, allow multi-platform and 
    config outputs.

-------------------------------------------------------------
Notation
  [Name]: IDE name or localization tag.
  {Path}: Shortcut for paths names.

  See APENDIX A for IDE Names and Localization.

-------------------------------------------------------------
1. C++Builder Version, Platform and Config

  a) Unpack ZeosDBO in a folder of your choice.
     Lets call it {ZeosDBOFolder}.

  b) Choose your C++Builder version in ZeosDBO "\packages" 
     folder. For example: "
       "{ZeosDBOFolder}\packages\CBuilder2009".

     Lets call this entire path of {CBZeosPath}.
  
  c) For C++Builder XE2 or up.
     Choose or check if there is your Platform and Config. 
     You may have to create the path:
       "{CBZeosPath}\{Platform}\{Config}"

     By default, C++Builder ZeosDBO packages are set to 
     Platform = Win32 and Config = Release.    

-------------------------------------------------------------
2. IDE Environment Setup

  a) Open your IDE. 

  b) Access IDE's "Environment Variables".

  c) Under "System variables" click "Add Override" 
     and add "{CBZeosPath}\{Platform}\{Config}\Bpl;" to "Path".
     See Troubleshoot 6.b.

  d) Under "User overrides" create "ZEOSDBO" variable with 
     value equals to {CBZeosPath} (see Step 1.b).

  e) Under [Include Path] proceed:       
       Add "$(ZEOSDBO)\{Platform}\{Config}\Include". 

     Under [Library Path] proceed:  
       Add "$(ZEOSDBO)\{Platform}\{Config}\Lib".        

     See Troubleshoot 6.c.
  
  Note: you can repeat steps c) and e) for multi-platform 
        or config options that you may use in your projects.

-------------------------------------------------------------
3. Install

  a) Open "{CBZeosPath}\ZeosDbo.groupproj" group project. 
  
  b) Build all projects.
     Note: don't Make all. Build them.
     See Troubleshoot 6.c.

  c) Over "ZComponent{XXX}.bpl" project, in Project Manager, 
     right click it and choose "Install". If the installation
     succeeds, you will receive a dialog confirmation about
     the ZeosDBO Installed Components.

-------------------------------------------------------------
4. Your Project

  a) It is important to check one option in your project that
     will use ZeosDBO. 
     Under [C++ Linker], set these option 
       "Link with Dynamic RTL" = false;
       "Link with the Delphi Runtime Library" = false

     In other words, this option must be equal to the 
     ZeosDBO Packages in [C++ Linker].
     See Troubleshoot 6.a.
     

-------------------------------------------------------------
5. Deploy

  a) If you are using dynamic build packages, deploy the 
     "Z*{XXX}.bpl" files, where "{XXX}" relates to CBuilder 
     Compiler version, with your application.
     The packages "Z*{XXX}.bpl" are located at folder:
       "{CBZeosPath}\{Platform}\{Config}\Bpl".

-------------------------------------------------------------
6. Troubleshoot

  a) Project <Prj.exe> raised exception class <$Address> with
     message 'access violation at <0xAddress>: read of 
     address <0xAddress>

     See Step 4 about [C++ Linker] and "Link with Dynamic RTL"
     Make sure your project has the same option as ZeosDBO
     Packages (by default, Dynamic RTL is set to false).

  b) Installing "ZComponent{XXX}.bpl" raises erros about
     ZCore.bpl could not be found.

     Check if the "{CBZeosPath}\{Platform}\{Config}\Bpl;" was
     included into "Path" as determined at Step 2.c.

  c) Errors complaining about *.dcu missing files.
     
     Check Step 2.e.
     Check Step 3.b.


=============================================================
APENDIX

-------------------------------------------------------------
A. IDE Names and Localization

  - CBuilder2006

    [Inlude Path] = Include search path (-I): 
    "Project > Options > C++ Compiler > Paths and Defines"

    [Libray Path] = Search Path: 
    "Tools > Options > Env. Options > C++ Options > Paths and Directories"

    [C++ Linker]
    "Project > Options > Linker > Linking"


  - CBuilder2009

    [Inlude Path]: 
    "Tools > Options > Env. Options > C++ Options > Paths and Directories"

    [Libray Path]: 
    "Tools > Options > Env. Options > C++ Options > Paths and Directories"

    [C++ Linker]
    "Project > Options > C++ Linker"


  - CBuilderXE2

    [Inlude Path]: 
    "Tools > Options > Env. Options > C++ Options > Paths and Directories"

    [Libray Path]: 
    "Tools > Options > Env. Options > C++ Options > Paths and Directories"

    [C++ Linker]
    "Project > Options > C++ Linker"
